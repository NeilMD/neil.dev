(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[464],{20881:(e,s,i)=>{Promise.resolve().then(i.bind(i,34705))},34705:(e,s,i)=>{"use strict";i.r(s),i.d(s,{default:()=>j});var t=i(95155),a=i(12115);i(46791),i(40672),i(9757);var n=i(795);let l=()=>(0,t.jsxs)("div",{id:"proj-details",className:"w-full h-full",children:[(0,t.jsx)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Details"})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsxs)("div",{className:"flex flex-col ",children:[(0,t.jsxs)("p",{children:[(0,t.jsx)("b",{className:"font-semibold",children:"Role: "}),"Full-Stack Developer, Backend Architect"]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("b",{className:"font-semibold",children:"Github Link: "}),(0,t.jsx)("a",{className:"text-blue-400",href:"https://github.com/NeilMD/portfolio-portal/tree/phase-2-jwt-auth",target:"_blank",children:"Phase-2 : JWT Auth Branch"})]})]})})]});var r=i(94523);let o=()=>(0,t.jsxs)("div",{className:"h-full bg-white p-8 rounded-2xl shadow-2xl z-10",children:[(0,t.jsx)(n.A,{blur:!1,duration:500,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Overview"})}),(0,t.jsx)("br",{}),(0,t.jsxs)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:[(0,t.jsx)("p",{className:"text-justify text-zinc-800",children:"In this project, I developed a robust authentication system for a web application using the MERN stack (MongoDB, Express.js, React.js, Node.js), implementing both JWT (Access and Refresh Tokens) and Google OAuth through Auth0. The main focus was on creating a scalable and secure backend architecture, with clean, standardized practices across logging, error handling, response structure, and role-based access."}),(0,t.jsx)("br",{}),(0,t.jsx)("p",{className:"text-justify text-zinc-800",children:"This project showcases how modern web applications can seamlessly integrate traditional JWT-based auth with third-party providers like Google using Auth0—while maintaining clarity in architecture and code quality."})]}),(0,t.jsx)("br",{})]}),c=()=>(0,t.jsxs)("div",{className:"h-full bg-white p-8 rounded-2xl shadow-2xl z-20",children:[(0,t.jsx)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Challenges Faced"})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium block mb-2",children:"Complex Authentication Flows"})}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("p",{className:"mb-2 text-justify text-black",children:"JWT authentication alone comes with its own set of token expiry, refresh logic, and secure cookie handling. Adding OAuth2 (Google via Auth0) into the mix significantly increased the complexity—handling user sessions coming from different sources, syncing with our database, and providing consistent user experiences across providers."})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsxs)("span",{className:"text-xl font-medium mb-2 block",children:["Role-Based Access Management"," "]})}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("p",{className:"text-justify text-black mb-2",children:"Ensuring that different API endpoints were properly guarded with user roles (admin, user, guest, etc.) required a centralized, maintainable approach. Spaghetti access-control logic was not an option—we needed scalability for future endpoint expansion."})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsxs)("span",{className:"text-xl font-medium mb-2 block",children:["Response Inconsistency and Debugging Pain"," "]})}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("p",{className:"text-justify text-black mb-2",children:"In early stages, logs were difficult to read, and responses across controllers were inconsistent, making debugging and client-side integration frustrating. The team had to standardize both logging and response structures to streamline development."})})]});var d=i(64566),u=i(51263),h=i(32444),x=i(46565);let m=e=>{let{language:s,filename:i,code:n,highlightLines:l=[],tabs:r=[]}=e,[o,c]=a.useState(!1),[m,p]=a.useState(0),g=r.length>0,b=async()=>{let e=g?r[m].code:n;e&&(await navigator.clipboard.writeText(e),c(!0),setTimeout(()=>c(!1),2e3))},f=g?r[m].code:n,j=g&&r[m].language||s,y=g?r[m].highlightLines||[]:l;return(0,t.jsxs)("div",{className:"relative w-full rounded-lg bg-slate-900 p-4 font-mono text-sm",children:[(0,t.jsxs)("div",{className:"flex flex-col gap-2",children:[g&&(0,t.jsx)("div",{className:"flex  overflow-x-auto",children:r.map((e,s)=>(0,t.jsx)("button",{onClick:()=>p(s),className:"px-3 !py-2 text-xs transition-colors font-sans ".concat(m===s?"text-white":"text-zinc-400 hover:text-zinc-200"),children:e.name},s))}),!g&&i&&(0,t.jsxs)("div",{className:"flex justify-between items-center py-2",children:[(0,t.jsx)("div",{className:"text-xs text-zinc-400",children:i}),(0,t.jsx)("button",{onClick:b,className:"flex items-center gap-1 text-xs text-zinc-400 hover:text-zinc-200 transition-colors font-sans",children:o?(0,t.jsx)(h.A,{size:14}):(0,t.jsx)(x.A,{size:14})})]})]}),(0,t.jsx)(d.A,{language:j,style:u.iU,customStyle:{margin:0,padding:0,background:"transparent",fontSize:"0.875rem"},wrapLines:!0,showLineNumbers:!0,lineProps:e=>({style:{backgroundColor:y.includes(e)?"rgba(255,255,255,0.1)":"transparent",display:"block",width:"100%"}}),PreTag:"div",children:String(f)})]})},p=()=>(0,t.jsxs)("div",{className:"h-full bg-white p-8 rounded-2xl z-20 shadow-2xl",children:[(0,t.jsx)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Approach and Problem-Solving"})}),(0,t.jsx)("br",{}),(0,t.jsxs)("div",{children:[(0,t.jsxs)("div",{className:"flex flex-col ",children:[(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,className:"flex-2/6 text-xl font-medium block mb-2",children:(0,t.jsx)("span",{children:"Establishing a Clear Project Architecture"})}),(0,t.jsxs)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,className:" flex-4/6 mb-2 text-justify text-zinc-800",children:[(0,t.jsx)("p",{className:"mb-2",children:"I started by building a modular structure separating controllers, routes, models, middlewares, and utilities. This separation helped ensure maintainability and cleaner collaboration for future developers."}),(0,t.jsx)("div",{className:" w-[240px] sm:w-full",children:(0,t.jsx)(m,{language:"javascript",filename:"Folder Configuration ",code:"\n    ├── build/                  # Build output directory(For React projects that are built)\n    ├── config/                 # Configuration files (e.g., database, environment)\n    ├── controllers/            # Controller logic for handling requests\n    ├── data/                   # Dummy Data(Depracated)\n    ├── middleware/             # Middleware functions\n    ├── models/                 # Database models\n    ├── node_modules/           # Project dependencies\n    ├── public/                 # Public assets (e.g., images, frontend files)\n    ├── routes/                 # Application routes\n    ├── ssl/                    # SSL certificate and private key\n    ├── utils/                  # Utility functions\n    ├── validators/             # Validation logic for data inputs\n    ├── db.js                   # Database connection file\n    ├── package.json            # Project manifest (dependencies, scripts, etc.)\n    ├── pnpm-lock.yaml          # Lockfile for exact dependency versions\n    └── server.js               # Entry point for starting the server\n  "})})]})]}),(0,t.jsx)("br",{}),(0,t.jsxs)("div",{className:"flex flex-col ",children:[(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,className:"flex-2/6 text-xl font-medium block mb-2",children:(0,t.jsx)("span",{children:"Logging for Clarity and Debugging"})}),(0,t.jsxs)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,className:"flex-4/6 mb-2 text-justify text-zinc-800",children:[(0,t.jsx)("p",{className:"mb-2",children:"I implemented a detailed logging system to trace every request:"}),(0,t.jsx)("div",{className:" w-[240px] sm:w-full",children:(0,t.jsx)(m,{language:"javascript",filename:"Sample Login Logs",code:"\n    [18:41:12.009] INFO (57426): REQUEST URL: /api/auth/login\n    [18:41:12.009] INFO (57426): REQUEST METHOD: POST\n    [18:41:12.009] INFO (57426): rbacMiddleware: START\n    [18:41:12.009] INFO (57426): rbacMiddleware: END\n    [18:41:12.010] INFO (57426): rateLimiterMiddleware: START\n    [18:41:12.010] INFO (57426): rateLimiterMiddleware: END\n    [18:41:12.010] INFO (57426): AuthController/login: START\n    [18:41:12.101] INFO (57426): AuthController/login: END\n  "})}),(0,t.jsx)("p",{className:"mt-2",children:"This helped me trace execution flow and detect issues quickly."})]})]}),(0,t.jsx)("br",{}),(0,t.jsxs)("div",{className:"flex flex-col",children:[(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,className:"flex-2/6 text-xl font-medium block mb-2",children:(0,t.jsx)("span",{children:"Building Role-Based Access from the Ground Up"})}),(0,t.jsxs)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,className:"flex-4/6 mb-2 text-justify",children:[(0,t.jsx)("p",{className:"mb-2",children:"I centralized the access control logic in a single configuration file. This allowed mapping specific API endpoints and HTTP methods to roles, simplifying the process of managing who could do what."}),(0,t.jsx)("div",{className:" w-[240px] sm:w-full",children:(0,t.jsx)(m,{language:"javascript",filename:"RBAC Configuration ",code:'\n    module.exports = [\n      {\n        path: "/api/project/user/*",\n        methods: {\n          GET: ["user"], // Only \'user\' can GET their own projects\n        },\n      },\n      {\n        path: "/api/project",\n        methods: {\n          GET: ["user", "guest"], // Both \'user\' and \'guest\' can GET all projects\n        },\n      },\n    ];\n  '})})]})]}),(0,t.jsx)("br",{})]})]}),g=()=>(0,t.jsxs)("div",{className:"h-full bg-white p-8 rounded-2xl shadow-2xl z-20",children:[(0,t.jsx)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Lessons Learned"})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium block mb-2",children:"Balancing Security with User Experience"})}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsxs)("p",{className:"mb-2 text-justify text-zinc-400",children:["One challenge was deciding where to store tokens to maximize security without frustrating the user."," ",(0,t.jsx)("span",{className:"text-black text-md italic font-light",children:"We opted for storing JWT tokens in the Authorization header and refresh tokens in HttpOnly cookies"}),", providing secure storage while maintaining smooth session continuity for users. Handling token expiry required careful consideration to avoid excessive logouts while minimizing the risk of token misuse."," "]})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium mb-2 block",children:"Granularity of Access Control"})}),(0,t.jsx)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,children:(0,t.jsxs)("p",{className:"text-justify text-zinc-400 mb-2",children:["Another challenge was determining the right level of granularity for role-based access. Since the application has relatively simple functionality,"," ",(0,t.jsxs)("span",{className:"text-black text-md italic font-light",children:["we opted for route-level protection. This simplified implementation, but we acknowledged the trade-off of not having more granular control over specific actions (e.g., read, write, delete) within a route."," "]}),"For now, this structure meets the project’s needs, but future iterations might require more detailed access control mechanisms."]})}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium mb-2 block",children:"CSRF and XSS Protection"})}),(0,t.jsxs)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:[(0,t.jsxs)("p",{className:"text-justify text-zinc-400 mb-2",children:["Implementing secure token management to prevent CSRF and XSS attacks was critical."," ",(0,t.jsxs)("span",{className:"text-black text-md italic font-light",children:["Storing refresh tokens in HttpOnly cookies provided additional security but added complexity to the token refresh process."," "]}),"We had to ensure that the token refresh process was smooth and seamless for the user to avoid session interruptions."," "]}),(0,t.jsx)("p",{className:"text-zinc-400 mb-2",children:"Ultimately, these challenges led us to make design choices that emphasized security while maintaining a positive user experience. In future projects, we may consider more granular role-based permissions and explore further enhancements to session management."})]})]});var b=i(93857);let f=()=>(0,t.jsxs)("div",{className:"h-full bg-white p-8 rounded-2xl shadow-2xl z-20",children:[(0,t.jsxs)(n.A,{blur:!1,duration:300,easing:"ease-out",initialOpacity:0,children:[(0,t.jsx)("h4",{className:"text-4xl md:text-5xl font-semibold font-serif mb-3",children:"Result"}),(0,t.jsx)("p",{className:"text-zinc-800",children:"To ensure secure and seamless user authentication, we implemented a hybrid system combining JWT-based authentication and Google OAuth 2.0 via Auth0/Passport.js."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium block mb-2",children:"JWT Authentication"})}),(0,t.jsxs)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,className:"text-zinc-800",children:[(0,t.jsx)("p",{className:"mb-2 text-justify text-black",children:"I used access and refresh tokens to maintain secure, stateless sessions:"}),(0,t.jsxs)("ul",{className:"list-disc pl-5 mb-2 text-zinc-700",children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("span",{className:"font-semibold text-black",children:"Access Token: "}),"Upon login, a short-lived JWT (15 minutes) is generated containing user ID and role. It is stored in memory and sent in the Authorization header (Bearer access_token) for secure API communication. This minimizes exposure to XSS vulnerabilities."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("span",{className:"font-semibold text-black",children:"Refresh Token: "}),"A long-lived (7-day) refresh token is issued and stored securely in an HttpOnly cookie, inaccessible to JavaScript. When the access token expires, the client automatically requests a new one via a secure endpoint."]})]}),(0,t.jsx)("p",{children:"This approach provides robust protection against common attacks (e.g., XSS) while eliminating the need for CSRF protection, since Bearer tokens are manually attached and not sent automatically by the browser."})]}),(0,t.jsx)("br",{}),(0,t.jsx)(n.A,{blur:!1,duration:600,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("span",{className:"text-xl font-medium block mb-2",children:"Google OAuth Integration"})}),(0,t.jsxs)(n.A,{blur:!1,duration:700,easing:"ease-out",initialOpacity:0,className:"text-zinc-800",children:[(0,t.jsx)("p",{className:"mb-2 text-justify text-black",children:"I also support login via Google accounts using Passport.js:"}),(0,t.jsxs)("ul",{className:"list-disc pl-5 mb-2 text-zinc-700",children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("span",{className:"font-semibold text-black",children:"OAuth Flow: "}),"Users authenticate through Google’s OAuth consent screen, redirected from /api/auth/login/google. Upon success, Google returns to our callback endpoint (/api/auth/login/google/callback), where Passport verifies and extracts user data."]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("span",{className:"font-semibold text-black",children:"Configuration: "}),'Google OAuth is configured using a client ID/secret from Google Cloud Console, with minimal scopes (["profile"]) and no server-side session (session: false).']}),(0,t.jsxs)("li",{children:[(0,t.jsx)("span",{className:"font-semibold text-black",children:"Token Handling: "}),"After authentication, we generate a JWT token for session management, sent in the Authorization header for subsequent requests."]})]}),(0,t.jsx)("p",{children:"This dual-authentication approach ensures flexibility, user convenience, and security best practices — enabling both traditional email-based logins and third-party OAuth with minimal risk exposure."})]}),(0,t.jsx)("br",{})]}),j=()=>(0,t.jsxs)("div",{className:"relative",children:[(0,t.jsx)(b.A,{headerValue:0,setHeaderValue:()=>{}}),(0,t.jsx)("main",{className:" min-h-svh w-full flex flex-col justify-center items-center bg-n-bg font-extralight mt-24 px-8",children:(0,t.jsxs)("div",{className:"relative  lg:w-[900px]  flex flex-col gap-8",children:[(0,t.jsx)("span",{children:(0,t.jsxs)(n.A,{blur:!0,duration:100,easing:"ease-out",initialOpacity:0,className:"text-2xl md:text-3xl -mb-6 font-mono font-light ",children:["Case Study 02"," "]})}),(0,t.jsx)(n.A,{blur:!0,duration:100,easing:"ease-out",initialOpacity:0,children:(0,t.jsx)("h2",{className:"text-4xl md:text-6xl font-serif font-semibold mb-6  ",children:"Building Scalable Authentication with JWT and Google OAuth using MERN & Auth0"})}),(0,t.jsxs)("div",{className:"flex flex-col lg:flex-row text-justify gap-8",children:[(0,t.jsxs)("div",{className:" lg:flex-1/3 text-md flex-col  gap-3 text-justify",children:[" ",(0,t.jsx)("div",{className:"h-full bg-white p-8 rounded-2xl shadow-2xl z-10",children:(0,t.jsx)(l,{})})]}),(0,t.jsx)("div",{id:"proj-overview",className:" lg:flex-2/3 ",children:(0,t.jsx)(o,{})})]}),(0,t.jsx)("div",{id:"proj-result",className:"z-20",children:(0,t.jsx)(f,{})}),(0,t.jsx)("div",{id:"proj-gallery",className:"grid grid-cols-3 w-full gap-8",children:(0,t.jsx)(r.A,{distance:100,direction:"vertical",reverse:!1,config:{tension:80,friction:20},initialOpacity:0,animateOpacity:!0,className:"col-span-3  px-4 py-8 rounded-2xl bg-stone-50 shadow-2xl text-center z-10",threshold:.2,children:(0,t.jsxs)("div",{className:"",children:[(0,t.jsx)("video",{className:"aspect-video w-full mb-3",src:"/neil.dev/video/phase3_react_integ.webm",autoPlay:!0,muted:!0,controls:!0}),(0,t.jsx)("span",{className:"text-sm italic text-center mb-3",children:"Frontend integration with React, ShadCN, and Tailwind CSS."}),(0,t.jsxs)("span",{className:"text-xs block text-center",children:[" ",(0,t.jsx)("a",{className:"text-blue-400",href:"https://github.com/NeilMD/portfolio-portal/tree/main",target:"_blank",children:"See Main Branch for React Integration"})]})]})})}),(0,t.jsx)("div",{id:"proj-challenges",className:"z-20",children:(0,t.jsx)(c,{})}),(0,t.jsx)("div",{id:"proj-approach",className:"z-20",children:(0,t.jsx)(p,{})}),(0,t.jsx)("div",{id:"proj-lessons",className:"mb-28 z-20",children:(0,t.jsx)(g,{})})]})})]})}},e=>{var s=s=>e(e.s=s);e.O(0,[208,625,153,596,441,517,358],()=>s(20881)),_N_E=e.O()}]);